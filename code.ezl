//
input: _mk_line(numericseries); //line for folioNtrend

input: _folio_line(numericREF); //line for CRP
input: _folio_line_CLP(numericREF); //line for CLP
input: _folio_line_STP(numericREF); //line for STP
input: _qc_avg(numericREF);
input: _qc_stdw(numericREF);

//init
array: _qc_array[](0);
variable: _len(0);
_len =int(4.5*60/barfreq)*5; //for 1week
arrayset(_qc_array, _len);
//
variable: _myOPEND(0);
if time =084500 then _myOPEND =open;

//data collection
variable: _qc_diff(0);

if currentbar >1 
    and time >084500
        and time <150000 then
begin
    //save diffvalue into arrayREF
    _qc_diff =iff(close[1] -open[1] >0, 
                    high[1] -open[1],
                    low[1]  -open[1]);
    reflash_data("PUSH", _qc_array, _qc_diff);
end;

//count stdev
variable: _qc_sum(0);
variable: _qc_diffq_sum(0);
variable: _range_L(0);
variable: _range_S(0);
variable: _folio_base(5);
variable: _LS_ratio(0);
variable: _switch_L(FALSE);
variable: _switch_S(FALSE);
///init
_qc_sum      =0;
_qc_diffq_sum=0;
///
if _qc_array[1] <>0 then //finished collection
begin
    
    for value1 =1 to _len
    begin
        _qc_sum =_qc_sum +_qc_array[value1];
    end;

    _qc_avg =_qc_sum /_len;
    
    for value1 =1 to _len
    begin
        _qc_diffq_sum =_qc_diffq_sum +(_qc_array[value1] -_qc_avg)^2;
    end;

    _qc_stdw = (_qc_diffq_sum/_len)^0.5;

    //
    _LS_ratio =_mk_line -open;

    _range_L =_qc_avg +_qc_stdw*stat;
    _range_S =_qc_avg -_qc_stdw*stat;

    _switch_L =numtotf(iff(_range_L >_folio_base
                            and _mk_line -open <_range_L, 
                        1, -1))
                and _LS_ratio >0;
    _switch_S =numtotf(iff(_range_S <_folio_base*-1
                            and _mk_line -open >_range_S,
                        1, -1)) 
                and _LS_ratio <0;
 
    if _switch_L
        or _switch_S then
    begin
        _folio_line =p_n(_LS_ratio) *_mk_line;
    end
    else begin
            _folio_line =_myOPEND *P_N(_myOPEND -open);
        end;

    _folio_line_CLP =iff(_folio_line >0, maxlist(_range_L, _folio_base), 
                                            minlist(_range_S, _folio_base*-1)) 
                        +abs(_folio_line);

    if _folio_line <>_folio_line[1] then 
        _folio_line_STP =iff(_folio_line >0, low[1], high[1]);

end;

//for crp extra
//for clp
cond =(filled <>0)
        and ((_folio_line >0
                    and (high -abs(_folio_line)) >=maxlist(_range_L, _folio_base)
                    and close <(open +high)*0.5) 
                or (_folio_line <0
                    and (low -abs(_folio_line)) <=minlist(_range_S, _folio_base*-1)
                    and close >(open +low)*0.5)
