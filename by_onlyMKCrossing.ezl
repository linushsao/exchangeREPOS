// 
input: _stdevSTAT(0.675, "進場標差倍數");
input: _stdevUNSTAT(1.645, "出場標差倍數");
input: _stdevUUNSTAT(1.959, "極值區標差倍數");
input: _qcLine_ratioT(1.959, "_qcLine標差倍數");
input: _e_path_period(4, "區間極值期數");
input: _mkavgline(1, "趨勢(0)日(1)周(2)月 均線");
input: _mkavgline_addone(0, "建平倉(0)日(1)周(2)月 均線");
input: _ratioU(0.66,"前K回檔比例(多:0.66)");
input: _ratioD(0.33,"前K回檔比例(空:0.33)");
input: _mark_offset(10, "標示offset");
input: _ENABLE_LOGGER(FALSE, "啟動紀錄");
//
settotalBar(4000);
//---
variable: _DEBUG_INFO("");
variable: _clp_ratio(0.33); //以多方為基準
//
{array: _params[30](0);}
array: _DEBUG[30](0);
//

variable: _stdMID(0);
variable: _stdW(0);
createBySTDEV(
	getSTDEV_MID,
	_stdMID,
	_stdW
);

variable: _U_STAT(0);
variable: _D_STAT(0);
variable: _U2_STAT(0);
variable: _D2_STAT(0);
variable: _U3_STAT(0);
variable: _D3_STAT(0);
_U_STAT =_stdMID + _stdW*_stdevSTAT;
_D_STAT =_stdMID - _stdW*_stdevSTAT;
_U2_STAT =_stdMID + _stdW*_stdevUNSTAT;
_D2_STAT =_stdMID - _stdW*_stdevUNSTAT;
_U3_STAT =_stdMID + _stdW*_stdevUUNSTAT;
_D3_STAT =_stdMID - _stdW*_stdevUUNSTAT;

//
variables: _extremes_Line_Upper(0);
variables: _extremes_Line_Mid(0);
variables: _extremes_Line_lower(0);
e_path(
	_e_path_period,
	_extremes_Line_Upper,
	_extremes_Line_Mid,
	_extremes_Line_lower
);

//
variable: _folio_NATU(0);
variable: _folio_NATU_StdBand(0);
variable: _folio_ByBand(0);
variable: _folio_ByBand_StdBand(0);

folio_stdevT2_core(
	_folio_NATU,
	_folio_NATU_StdBand,
	_folio_ByBand,
	_folio_ByBand_StdBand
);
//
{variable: _marketPrice_avg_RAW(0);
_marketPrice_avg_RAW =_marketPrice_avg("DAILY");}
variable: _params("");
variable: _marketPrice_avg_RAW(0);
variable: _marketPrice_avg_addone_RAW(0);
switch(_mkavgline)
begin
	case 0:	_params ="DAILY";
	case 1:	_params ="WEEKILY";
	case 2:	_params ="MONTHILY";
end;

_marketPrice_avg_RAW =_marketPrice_avg(_params);

switch(_mkavgline_addone)
begin
	case 0:	_params ="DAILY";
	case 1:	_params ="WEEKILY";
	case 2:	_params ="MONTHILY";
end;

_marketPrice_avg_addone_RAW =_marketPrice_avg(_params);
//
//Extra stdev for folio
//CORE for CRP
variable: _folio_POS_Line(0);
variable: _folio_POS_LineRE(0);
variable: _folio_POS_LineCLP(0);
variable: _folio_POS_LineCLPmin(0);
variable: _folio_POS_LineSTP(0);
variable: _mkcqc_avg(0);
variable: _mkcqc_stdw(0);
variable: _range_L(0);
variable: _range_S(0);

by_onlyMKCrossing(
 _stdevSTAT,
 _stdevUNSTAT,
 _stdevUUNSTAT,

 _marketPrice_avg_addone_RAW, //line for folioNtrend

 _folio_POS_Line, //line for CRP
 _folio_POS_LineCLP, //line for CLP
 _folio_POS_LineSTP, //line for STP
 _mkcqc_avg,
 _mkcqc_stdw

);

_range_L =_mkcqc_avg +_mkcqc_stdw*_stdevSTAT;
_range_S =_mkcqc_avg -_mkcqc_stdw*_stdevSTAT;

if _folio_POS_Line <>_folio_POS_Line[1] then
begin
	_folio_POS_LineCLPmin =p_N(_folio_POS_Line)*5 +absValue(_folio_POS_Line);
end;

//
plot1(absValue(_folio_POS_Line), "_folio_POS_Line");
plot2(_folio_POS_Line, "_folio_POS_Line+");
plot3(_folio_POS_LineCLP, "_folio_POS_LineCLP");
plot4(_folio_POS_LineSTP, "_folio_POS_LineSTP");
plot5(_range_L, "_range_L");
plot6(_range_S, "_range_S");
plot7(_marketPrice_avg_addone_RAW, "_mk_avg_addone_RAW");
plot8(_folio_POS_LineCLPmin, "_folio_POS_LineCLPm");
//
if (_folio_POS_Line) <>(_folio_POS_Line[1]) then
begin
	if _folio_POS_Line >0 then plot50(high +_mark_offset, "UPPER");
	if _folio_POS_Line <0 then plot51(low -_mark_offset, "LOWER");
end;

//
//
if _ENABLE_LOGGER then	
logger_multi("",
	text(

		_DEBUG[1], ",",	// =_stdMID;
		_DEBUG[2], ",",	// =_stdW;
		_DEBUG[3], ",",	// =_stdevSTAT;
		_DEBUG[4], ",",	// =_stdevUNSTAT;
		_DEBUG[5], ",",	// =_stdevUUNSTAT;

		_DEBUG[6], ",",	// =_marketPrice_avg_RAW;
		_DEBUG[7], ",",	// =_qc_line_long;
		_DEBUG[8], ",",	// =_qc_line_short;
		_DEBUG[9] 		//=_folio_line;
		)
	);


i
