//[0-1_備忘錄]
////1.lineCLP為順向穿越啟動模式.
////2.主要進場線只在夜盤時段產生
////3.跨早盤時如有留倉，以夜盤結束時的K極值為出場點
////4.長週期模式，進出場線需單純，需考量震蕩容受度
////5.只在定周均和定日均分開時啟動(非周第一天)。

//[1-1_傳入函數之參數]
input: _stdevSTAT(numericSimple);
input: _stdevUNSTAT(numericSimple);
input: _stdevUUNSTAT(numericSimple);
input: _stdMID(numericseries);
input: _stdW(numericseries);

input: _str_switch(numericSimple);                  //策略模式(0全 1內穿越 2外穿越)
input: _marketPrice_avg_RAW(numericseries);         //GuideLine
input: _marketPrice_avg_addone_RAW(numericseries);  //line for Crp

input: _folio_POS_Line(numericREF);                 //line for CRP
input: _folio_POS_LineRE(numericREF);               //line for reCRP
input: _folio_POS_LineCLP(numericREF);              //line for CLP
input: _folio_POS_LineSTP(numericREF);              //line for STP
input: _folio_POS_LineFOLIO(numericREF);            //line for FOLIO

//[1-2_檢查傳入之核心參數]
if _str_switch <0
    or _str_Switch >2 then
    raiseRunTimeError(text("[2MKBowC_core] 請檢查參數:_str_Switch"));

//[1-3_local參數建立與重置]
variable: _folio_base(5);
variable: _LS_ratio(0);
variable: _switch_L(FALSE);
variable: _switch_S(FALSE);
variable: _switch_TL(FALSE);
variable: _switch_TS(FALSE);
variable: _switch_curr(0); //策略模式
variable: _INNER_CROSSING(1); //內穿越
variable: _OUTTER_CROSSING(2); //外穿越
variable: _marketPrice_avg_preWeekily_RAW(0);

////各種進場線於夜盤時段產生
variable: _time_check(FALSE);
_time_check =(time >150000
			        or time <051500)
                {and _marketPrice_avg_RAW <>_marketPrice_avg_addone_RAW};

////早開盤檢查項目
////早1stK-stick，確認是否為週1stK/日
////週1stDay趨勢向量基點設定
if time =084500 then
begin
    if openweekly <>openweekly[1] then //新週第一天早盤開盤K
        _marketPrice_avg_preWeekily_RAW =_marketPrice_avg_RAW[1];
end;

////趨勢向量(周1stDay及其他)
if _marketPrice_avg_RAW <>_marketPrice_avg_addone_RAW then //非周1thDay
     _LS_ratio =_marketPrice_avg_RAW             -_marketPrice_avg_addone_RAW
else _LS_ratio =iff(_marketPrice_avg_preWeekily_RAW =0,
                    0,
                    _marketPrice_avg_preWeekily_RAW  -_marketPrice_avg_addone_RAW); 

//[2-1_產生盤勢分析]
////內穿越法
////以內穿_marketPrice_avg_addone_RAW為啟動點
////趨勢反轉期
_switch_L =open <_marketPrice_avg_addone_RAW
			and high >=_marketPrice_avg_addone_RAW //多方穿越_marketPrice_avg_addone_RAW
			and _LS_ratio >0 //趨勢多
			and (_str_switch =0 or _str_switch=1);//模式為全或內穿越
_switch_S =open >_marketPrice_avg_addone_RAW
			and low <=_marketPrice_avg_addone_RAW //空方穿越
			and _LS_ratio <0 //趨勢空
			and (_str_switch =0 or _str_switch=1);//模式為全或內穿越

////外穿越法
////遠離_marketPrice_avg_addone_RAW並外穿_marketPrice_avg_RAW為啟動點
////趨勢形成期
_switch_TL =open <_marketPrice_avg_RAW
			and high >_marketPrice_avg_RAW //多方穿越_marketPrice_avg_RAW
			and _LS_ratio >0 //趨勢多
			and (_str_switch =0 or _str_switch=2); //模式為全或外穿越
_switch_TS =open >_marketPrice_avg_RAW
			and low <_marketPrice_avg_RAW //空方穿越_marketPrice_avg_RAW
			and _LS_ratio <0 //趨勢空
			and (_str_switch =0 or _str_switch=2); //模式為全或外穿越

//[3-1_產生各進出場線]
if _time_check then
begin
    ////產生進場線
	if _switch_L
		or _switch_S then
	begin
        //標示為形成內穿越
		_switch_curr =_INNER_CROSSING;

		_folio_POS_Line =p_n(_LS_ratio) *iff(_LS_ratio >0,
												maxlist2(_marketPrice_avg_addone_RAW,
														_marketPrice_avg_addone_RAW[1],
														high[1]),
												minlist2(_marketPrice_avg_addone_RAW, 
														_marketPrice_avg_addone_RAW[1],
														low[1])
											);

	end
	else
	if _switch_TL
		or _switch_TS then
	begin
        //標示為形成外穿越
		_switch_curr =_OUTTER_CROSSING;

		_folio_POS_Line =p_n(_LS_ratio) *iff(_LS_ratio >0,
												maxlist2(_marketPrice_avg_RAW,
														_marketPrice_avg_RAW[1],
														high[1]),
												minlist2(_marketPrice_avg_RAW,
														_marketPrice_avg_RAW[1],
														low[1])
											);
	end;

end;

//產生出場線及獲利基準線LineCLP/LineFOLIO
if (_switch_curr =_INNER_CROSSING 
		or _switch_curr =_OUTTER_CROSSING) then
begin
	if _switch_curr =_INNER_CROSSING then
	begin
		if ((_folio_POS_Line >0
					and high >=_marketPrice_avg_RAW) 
				or (_folio_POS_Line <0
						and low <=_marketPrice_avg_RAW)) then
			_folio_POS_LineCLP =_marketPrice_avg_RAW;
	end
	else
		_folio_POS_LineCLP =_stdMID +p_n(_folio_POS_Line)*_stdW*_stdevUNSTAT;

	_folio_POS_LineFOLIO=iff(_switch_curr =_INNER_CROSSING,
								_marketPrice_avg_addone_RAW,
								_marketPrice_avg_RAW);
end;

//產生平進循環線LineRe
if _folio_POS_Line =_folio_POS_Line[1] 
	and _folio_POS_Line[1] =_folio_POS_Line[2]then
begin

	if _switch_curr =_INNER_CROSSING 
		and (( _folio_POS_Line >0
					and low[1] <_folio_POS_LineFOLIO[1]) 
				or ( _folio_POS_Line <0
						and high[1] >_folio_POS_LineFOLIO[1])) then
	begin
		_folio_POS_LineRE   =iff(_folio_POS_Line >0, high[1] , low[1]);
	end
	else if _switch_curr =_OUTTER_CROSSING     
			and (( _folio_POS_Line >0
						and low[1] <_folio_POS_LineFOLIO[1])
					or ( _folio_POS_Line <0
							and high[1] >_folio_POS_LineFOLIO[1])) then
		begin
			_folio_POS_LineRE   =iff(_folio_POS_Line >0, high[1] , low[1]);
		end;
end;

//產生停損線LineSTP
if _folio_POS_Line <>_folio_POS_Line[1] then 
	_folio_POS_LineSTP =(iff(_folio_POS_Line >0, low[1], high[1]) 
								+absValue(_folio_POS_Line))*0.5;

